<?xml version="1.0" standalone="no"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
                    "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd" [
<!ENTITY FindBugs "<application>FindBugs</application>">
<!ENTITY Ant "<application>Ant</application>">
<!ENTITY Saxon "<application>Saxon</application>">
<!ENTITY FBHome "<replaceable>$FINDBUGS_HOME</replaceable>">
]>
 
<book lang="en" id="findbugs-manual">
 
<bookinfo>
<title>Using &FindBugs;</title>

<author>
  <firstname>David</firstname>
  <surname>Hovemeyer</surname>
</author>

<edition>@VERSION@</edition>

<pubdate>@RELEASE_DATE@</pubdate>

</bookinfo>

<!--
   **************************************************************************
   Introduction
   **************************************************************************
-->
 
<chapter id="introduction">
<title>Introduction</title>

<para> &FindBugs; is a program to find bugs in Java programs.  It looks for instances
of "bug patterns" --- code instances that are likely to be errors.</para>

<para> This document describes version @VERSION@ of &FindBugs;. This is an
early release of the tool, so you may find problems with it. We
are very interested in getting your feedback on &FindBugs;. Please visit
the <ulink url="http://www.cs.umd.edu/~pugh/java/bugs/">&FindBugs; web page</ulink> for
the latest information on &FindBugs;, contact information, and support resources such
as information about the &FindBugs; mailing lists.</para>

<sect1>
<title>Requirements</title>
<para> To use &FindBugs;, you need a runtime environment compatible with
<ulink url="http://java.sun.com/j2se">Java 2 Standard Edition</ulink>, version 1.4.0 or later.
&FindBugs; is platform independent, and is known to run on GNU/Linux, Windows, and
MacOS X platforms.</para>

<para>You should have at least 256 MB of memory to use &FindBugs;.</para>
</sect1>
 
</chapter>

<!--
   **************************************************************************
   Installing FindBugs
   **************************************************************************
-->

<chapter id="installing">
<title>Installing and Running &FindBugs;</title>

<para>
This chapter explains how to install and run &FindBugs;.
</para>

<sect1>
<title>Extracting the Distribution</title>

<para>
The easiest way to install &FindBugs; is to download a binary distribution.
Binary distributions are available in
<ulink url="http://www.cs.umd.edu/~pugh/java/bugs/release/findbugs-@VERSION@.tar.gz">gzipped tar format</ulink> and
<ulink url="http://www.cs.umd.edu/~pugh/java/bugs/release/findbugs-@VERSION@.zip">zip format</ulink>.
Once you have downloaded a binary distribution, extract it into a directory of your choice.
</para>

<para>
Extracting a gzipped tar format distribution:
<screen>
<prompt>$ </prompt><command>gunzip -c findbugs-@VERSION@.tar.gz | tar xvf -</command>
</screen>
</para>

<para>
Extracting a zip format distribution:
<screen>
<prompt>C:\Software> </prompt><command>unzip findbugs-@VERSION@.zip</command>
</screen>
</para>

<para>
Usually, extracting a binary distribution will create a directory ending in
<filename class="directory">findbugs-@VERSION@</filename>. For example, if you extracted
the binary distribution from the <filename class="directory">C:\Software</filename>
directory, then the &FindBugs; software will be extracted into the directory
<filename class="directory">C:\Software\findbugs-@VERSION@</filename>.
This directory is the &FindBugs; home directory.  We'll refer to it as
&FBHome; throughout this manual.
</para>
</sect1>

<sect1>
<title>Configuration</title>

<para>
Once you have extracted the binary distribution, all you need to do in order
to run &FindBugs; is to invoke the wrapper script.
</para>

<para>
On Unix-like systems, use the following command to invoke the wrapper script:
<screen>
<prompt>$ </prompt><command>&FBHome;/bin/findbugs <replaceable>options...</replaceable></command>
</screen>
</para>

<para>
On Windows systems, the command to invoke the wrapper script is 
<screen>
<prompt>C:\My Directory> </prompt><command>&FBHome;\bin\findbugs.bat -home &FBHome; <replaceable>options...</replaceable></command>
</screen>
</para>

<para>
To make invoking the wrapper script more convenient, you may want to create a GUI shortcut.
Another possibility is to add the <filename class="directory">&FBHome;/bin</filename>
directory to your <envar>PATH</envar> environment variable, which allows you
to simply run the command <command>findbugs</command> from the command prompt.
(On Windows, you can set the
<envar>FINDBUGS_HOME</envar> environment variable to avoid having to use the
<arg>-home</arg> option to the wrapper script.)
</para>

</sect1>

<sect1>
<title>Command Line Options</title>

<para>
The wrapper script used to invoke &FindBugs; can take
several command line options.
<variablelist>
  <varlistentry>
    <term><arg choice="req">-gui</arg></term>
    <listitem>
       <para>
         Use the Graphical User Interface (GUI) for &FindBugs;.  The GUI is the
         default, so you will generally not need to use this option.
       </para>
    </listitem>
  </varlistentry>

  <varlistentry>
    <term><arg choice="req">-textui</arg></term>
    <listitem>
       <para>
         Use the command line interface instead of the GUI.
         The command line interface is described in the <link linkend="textui">next chapter</link>.
       </para>
    </listitem>
  </varlistentry>

  <varlistentry>
    <term><arg choice="req">-jvmArgs=<replaceable>args</replaceable></arg></term>
    <listitem>
       <para>
         Specifies arguments to pass to the JVM.  For example,
         you can use this option to increase the maximum Java heap size
         if you are analyzing a very large program.
       </para>
    </listitem>
  </varlistentry>

  <varlistentry>
    <term><arg choice="req">-plastic</arg></term>
    <listitem>
       <para>
          Use the plastic look and feel from <ulink url="http://jgoodies.com/">jgoodies.com</ulink>.
          To use this option, put the file <filename>plastic.jar</filename>
          in the <filename class="directory">&FBHome;/lib</filename>
          directory.
       </para>
    </listitem>
  </varlistentry>

</variablelist>
</para>

</sect1>

</chapter>

<!--
   **************************************************************************
   Compiling FindBugs from Source
   **************************************************************************
-->

<chapter id="building">
<title>Building &FindBugs; from Source</title>

<para>
This chapter describes how to build &FindBugs; from source code.  Unless you are
interesting in modifying &FindBugs;, you will probably want to skip to the
<link linkend="gui">next chapter</link>.
</para>

<sect1>
<title>Prerequisites</title>

<para>
To compile &FindBugs; from source, you will need the following:
<itemizedlist>
  <listitem>
    <para>
      The <ulink url="http://www.cs.umd.edu/~pugh/java/bugs/release/findbugs-@VERSION@-source.tar.gz"
      >&FindBugs; source distribution</ulink>
    </para>
  </listitem>
  <listitem>
    <para>
      <ulink url="http://java.sun.com/j2se/">JDK 1.4.0 or later</ulink>
    </para>
  </listitem>
  <listitem>
    <para>
      The early-access version of the
     <ulink url="http://developer.java.sun.com/developer/earlyAccess/adding_generics/index.html"
     >generics-enabled javac
     </ulink>
    </para>
  </listitem>
  <listitem>
    <para>
      <ulink url="http://ant.apache.org/">Apache &Ant;</ulink>, version 1.5 or later
    </para>
  </listitem>
  <listitem>
    <para>
      The <ulink url="http://www.thecortex.net/clover/generics/jsr14adapter-1.1.jar"
     >JSR 14 adapter for &Ant;</ulink>.  Put the file <filename>jsr14adapter-1.1.jar</filename> in the
     <filename class="directory">lib</filename> subdirectory of your &Ant; installation.
    </para>
  </listitem>
</itemizedlist>
</para>

<para>
If you want to be able to generate formatted versions of the &FindBugs; documentation,
you will also need the following software:
<itemizedlist>
  <listitem>
    <para>
    The <ulink url="http://docbook.sourceforge.net/projects/xsl/index.html">DocBook XSL Stylesheets</ulink>.
    These are required to convert the &FindBugs; manual into HTML and PDF formats.
    </para>
  </listitem>
  <listitem>
    <para>
      The <ulink url="http://saxon.sourceforge.net/">&Saxon; XSLT Processor</ulink>.
      The file <filename>saxon.jar</filename> should be in your <envar>CLASSPATH</envar>.
    </para>
  </listitem>
<!--
  <listitem>
    <para>
    </para>
  </listitem>
-->
</itemizedlist>
</para>

</sect1>

<sect1>
<title>Extracting the Source Distribution</title>
<para>
After you download the source distribution, you'll need to extract it into
a working directory.  A typical command to do this is:

<screen>
<prompt>$ </prompt><command>gunzip -c findbugs-@VERSION@-source.tar.gz | tar xvf -</command>
</screen>

</para>
</sect1>

<sect1>
<title>Modifying <filename>build.xml</filename></title>
<para>
You will need to modify the <filename>build.xml</filename> file
used by <ulink url="http://ant.apache.org/">&Ant;</ulink> to build &FindBugs;.
At the top of <filename>build.xml</filename> you will see several property
definitions which look like this:
<programlisting>
<![CDATA[
    <!-- Set this to the location where you installed the generics-enabled
         version of javac. -->
    <property name="jsr14.home"
              value="/home/software/java/jsr14_adding_generics-1_3-ea" />

    <!-- Set this to the directory containing the DocBook Modular XSL Stylesheets
         from http://docbook.sourceforge.net/projects/xsl/ -->
    <property name="xsl.stylesheet.home"
              value="/export/home/daveho/linux/docbook/docbook-xsl-1.61.0" />

    <!-- Set this to the directory where Saxon (http://saxon.sourceforge.net/)
         is installed. -->
    <property name="saxon.home"
              value="/export/home/daveho/linux/java/saxon-6.5.2" />
]]>
</programlisting>
</para>

<para>
The first property, <varname>jsr14.home</varname> specifies the directory containing your installation
of the generics-enabled version of javac.  You must update the value
of this property to match your system.
</para>

<para>
The second property, <varname>xsl.stylesheet.home</varname> specifies the full
path to the directory where you have installed the
<ulink url="http://docbook.sourceforge.net/projects/xsl/">DocBook Modular XSL
Stylesheets</ulink>.  You only need to specify this property if you will be
generating the &FindBugs; documentation.
</para>

<para>
The third property, <varname>saxon.home</varname>, is the full path to the
directory where you installed the <ulink url="http://saxon.sourceforge.net/">&Saxon; XSLT Processor</ulink>.
You only need to specify this property if you will be
generating the &FindBugs; documentation.
</para>

</sect1>

<sect1>
<title>Running &Ant;</title>

<para>
Once you have extracted the source distribution, modified <filename>build.xml</filename>
to reflect your system, and configured the tools (such as &Saxon; and the the JSR-14 adapter
for &Ant;), you are ready to build &FindBugs;.  Invoking &Ant; is a simple matter
of running the command
<screen>
<prompt>$ </prompt><command>ant <replaceable>target</replaceable></command>
</screen>
where <replaceable>target</replaceable> is one of the following:
<variablelist>
  <varlistentry>
    <term><command>build</command></term>
    <listitem>
       <para>
         This target compiles the code for &FindBugs;.
       </para>
    </listitem>
  </varlistentry>

  <varlistentry>
    <term><command>buildAll</command></term>
    <listitem>
       <para>
       This target compiles the code and formats the documentation.
       </para>
    </listitem>
  </varlistentry>

  <varlistentry>
    <term><command>release</command></term>
    <listitem>
       <para>
       This target generates a complete binary release of &FindBugs; into the
       <filename class="directory">build/release</filename> subdirectory.
       You will probably not need to use this target unless you want to
       distribute your own modified version of &FindBugs;.
       </para>
    </listitem>
  </varlistentry>

  <varlistentry>
    <term><command>docs</command></term>
    <listitem>
       <para>
       This target just formats the documentation.  (It also compiles some of
       the source code as a side-effect.)
       </para>
    </listitem>
  </varlistentry>
</variablelist>
</para>

<para>
After running an &Ant; command, you should see output similar to
the following (after some other messages regarding the tasks that
&Ant; is running):
<screen>
<computeroutput>
BUILD SUCCESSFUL
Total time: 17 seconds
</computeroutput>
</screen>
</para>

</sect1>

<sect1>
<title>Running &FindBugs;</title>
<para>
The &Ant; build script for &FindBugs; is set up such that after 
building the <command>build</command> target, the working directory
is set up just like a binary distribution.  So, the information about
installing a binary distribution of &FindBugs; in <xref linkend="installing" />
apply to source distributions, too.
</para>
</sect1>

</chapter>


<!--
   **************************************************************************
   Using the FindBugs Graphical Interface
   **************************************************************************
-->

<chapter id="gui">
<title>Using the Findbugs Graphical User Interface</title>

<para>
&FindBugs; has two user interfaces: a graphical user interface (GUI) and a
command line user interface.  This chapter describes the graphical user interface.
</para>

<!--
<sect1>
<title>Executing the &FindBugs; GUI</title>
</sect1>
-->

<sect1>
<title>Creating a Project</title>
<para>
After you have started &FindBugs; using the <command>findbugs</command> command,
choose the <menuchoice><guimenu>File</guimenu><guimenuitem>New Project</guimenuitem></menuchoice>
menu item.  You will see a dialog which looks like this:
<mediaobject>
<imageobject>
<imagedata fileref="project-dialog.png" />
</imageobject>
</mediaobject>
</para>

<para>
Use the "Browse" button next to the "Jar file" text field to select a Jar
file containing java classes to analyze for bugs.  You may add multiple
Jar files.
</para>

<para>
You can also add the source directories which contain
the source code for the Jar files you are analyzing.  This will enable
&FindBugs; to highlight the source code which contains a possible error.
The source directories you add should be the roots of the Java
package hierarchy.  For example, if your application is contained in the
<varname>org.foobar.myapp</varname> package, you should add the
parent directory of the <filename class="directory">org</filename> directory
to the source directory list for the project.
</para>

<para>
Another optional step is to add additional Jar files or directories as
classpath entries.  You should do this if the Jar files you are analyzing
have references to other classes which are not included in the analyzed
jar files and are not in the standard runtime classpath.  Some of the bug
pattern detectors in &FindBugs; make use of class hierarchy information,
so you will get more accurate results if the entire class hierarchy is
available which &FindBugs; performs its analysis.
</para>

</sect1>

<sect1>
<title>Running the Analysis</title>
<para>
Once you have added all of the Jar files and source directories,
click the "Find Bugs!" button to analyze the classes contained in the
Jar files.  Note that for a very large program on an older computer,
this may take quite a while (tens of minutes).  A recent computer with
ample memory will typically be able to analyze a large program in only a
few minutes.
</para>
</sect1>

<sect1>
<title>Browsing Results</title>

<para>
When the analysis completes, you will see a screen like the following:
<mediaobject>
  <imageobject>
    <imagedata fileref="example-details.png" />
  </imageobject>
</mediaobject>
</para>

<para>
The top pane of the window shows the bug tree; this is a hierarchical
representation of all of the potential bugs detected in the analyzed
Jar files.  The tabs allow you to browse by class, package, or bug type.
</para>

<para>
When you select a particular bug instance in the top pane, you will
see a description of the bug in the "Details" tab of the bottom pane.
In addition, the "Source code" tab of the bottom pane will, for some
kinds of bugs, show the program source code where the potential bug occurs.
In the above example, the bug is an access to an uninitialized field in
a constructor.  The source code window highlights the line containing
the problematic access.
</para>

<para>
You may use the <menuchoice><guimenu>File</guimenu><guimenuitem>Save project</guimenuitem></menuchoice>
menu option to save the current lists
of Jar files and source directories.  A saved project may be loaded with
the <menuchoice><guimenu>File</guimenu><guimenuitem>Open project</guimenuitem></menuchoice> menu option.
Note that the analysis results are
not saved, so you will have to run the analysis again.  (Saving results
may be added to a future &FindBugs; release).
</para>

</sect1>

</chapter>



<!--
   **************************************************************************
   Using the FindBugs Command Line Interface
   **************************************************************************
-->

<chapter id="textui">
<title>Using the &FindBugs; Command Line Interface</title>

<para>

To use the command line interface, execute the command

<cmdsynopsis>
  <command>findbugs</command>
  <arg choice="req">-textui</arg>
  <arg>-sortByClass</arg>
  <arg rep="repeat" choice="req"><replaceable>file.jar</replaceable></arg>
</cmdsynopsis>

You can list any number of Jar files (or plain class files).
The <arg>-sortByClass</arg> option may be used to sort
the reported bug instances by class name.  The results will be sent to
the standard output file descriptor.
</para>

<note>
<title>Planned Features</title>
<para>
  In future releases of &FindBugs;, we plan to support generating reports in formats
  such as HTML and XML, as well as providing more flexibility over which
  bug detectors are run, how results can be sorted and filtered, etc.
</para>
</note>

</chapter>


<!--
   **************************************************************************
   License
   **************************************************************************
-->

<chapter id="license">
<title>License</title>

<para>
FindBugs is free software distributed under the terms of the
<ulink url="http://www.gnu.org/licenses/lgpl.html">Lesser GNU Public License</ulink>.
You should have received a copy of the license in the file <filename>LICENSE.txt</filename>
in the &FindBugs; distribution.
</para>

<para>
You can find the latest version of FindBugs, along with its source code, from the
<ulink url="http://www.cs.umd.edu/~pugh/java/bugs/">FindBugs web page</ulink>.
</para>

</chapter>


<!--
   **************************************************************************
   Acknowledgments
   **************************************************************************
-->
<chapter id="acknowledgments">
<title>Acknowledgments</title>

<sect1>
<title>Contributors</title>

<para>&FindBugs; was originally written by Bill Pugh (<email>pugh@cs.umd.edu</email>).
David Hovemeyer (<email>daveho@cs.umd.edu</email>) implemented some of the
detectors, added the GUI, and is the current maintainer.</para>

<para>Mike Fagan (<email>mfagan@tde.com</email>) contributed the &Ant; build script
and several enhancements and bug fixes to the GUI.</para>

</sect1>

<sect1>
<title>Software Used</title>

&FindBugs; uses several open-source software packages, without which its
development would have been much more difficult.

<sect2>
<title>BCEL</title>
<para>&FindBugs; includes includes software developed by the Apache Software Foundation
(<ulink url="http://www.apache.org/">http://www.apache.org/</ulink>).
Specifically, it uses the <ulink url="http://jakarta.apache.org/bcel/">Byte Code
Engineering Library</ulink>.</para>
</sect2>

<sect2>
<title>DOM4J</title>
<para>&FindBugs; uses <ulink url="http://dom4j.org">DOM4J</ulink>, which is
distributed under the following license:</para>

<blockquote>
<para>
Copyright 2001 (C) MetaStuff, Ltd. All Rights Reserved. 
</para>

<para>
Redistribution and use of this software and associated documentation
("Software"), with or without modification, are permitted provided that
the following conditions are met:
</para>

<orderedlist numeration="arabic">
   <listitem><para>
   Redistributions of source code must retain copyright statements and
   notices. Redistributions must also contain a copy of this document.
  </para></listitem>
   <listitem><para>
   Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.
  </para></listitem>
   <listitem><para>
   The name "DOM4J" must not be used to endorse or promote products
   derived from this Software without prior written permission
   of MetaStuff, Ltd. For written permission, please contact
   <email>dom4j-info@metastuff.com</email>.
  </para></listitem>
   <listitem><para>
   Products derived from this Software may not be called "DOM4J" nor may
   "DOM4J" appear in their names without prior written permission of
   MetaStuff, Ltd. DOM4J is a registered trademark of MetaStuff, Ltd.
  </para></listitem>
   <listitem><para>
   Due credit should be given to the DOM4J Project (<ulink url="http://dom4j.org/">http://dom4j.org/</ulink>).
  </para></listitem>
</orderedlist>

<para>
THIS SOFTWARE IS PROVIDED BY METASTUFF, LTD. AND CONTRIBUTORS ``AS IS''
AND ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL METASTUFF, LTD. OR ITS
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
</para>
</blockquote>

</sect2>

</sect1>

</chapter>


</book>
